// src: https://github.com/ekiwi/paso/blob/ad2bf83f420ca704ff0e76e7a583791a0e80a545/benchmarks/src/benchmarks/aes/TinyAESSpec.scala#L220

struct TinyAES128 {
  in key: u128,
  in state: u128,
  out output: u128,
}

fn aes128<dut : TinyAES128>(in key: u128, in state: u128, out output: u128) {
  dut.state := state;
  dut.key := key;
  step();
  fork();
  dut.state := X;
  dut.key := X;
  // twenty cycles to complete
  step(20); // (commented until we modify the IR to allow for expresisons in Step stmts)
  assert_eq(dut.output, output);
}