---
source: src/serialize.rs
expression: content
---
struct Regfile {
  in i_go: u1,
  out o_ready: u1,
  in i_rd_en: u1,
  in i_rd_addr: u5,
  in i_rd: u1,
  in i_rs1_addr: u5,
  in i_rs2_addr: u5,
  out o_rs1: u1,
  out o_rs2: u1,
}

fn read_write<R: Regfile>(in rs1_addr: u5, out rs1_data: u32, out rs2_data: u32, in rs2_addr: u5, in rd_enable: u1, in rd_addr: u5, in rd_data: u32) {
  R.i_go := 1;
  R.i_rd_en := 0;
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_go := 0;
  R.i_rs1_addr := rs1_addr;
  R.i_rs2_addr := rs2_addr;
  assert_eq(R.o_ready, 0);
  step(1);
  assert_eq(R.o_ready, 1);
  step(1);
  R.i_rd_en := rd_enable;
  R.i_rd_addr := rd_addr;
  R.i_rd := rd_data[0:0];
  assert_eq(R.o_rs1, rs1_data[0:0]);
  assert_eq(R.o_rs2, rs2_data[0:0]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[1:1];
  assert_eq(R.o_rs1, rs1_data[1:1]);
  assert_eq(R.o_rs2, rs2_data[1:1]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[2:2];
  assert_eq(R.o_rs1, rs1_data[2:2]);
  assert_eq(R.o_rs2, rs2_data[2:2]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[3:3];
  assert_eq(R.o_rs1, rs1_data[3:3]);
  assert_eq(R.o_rs2, rs2_data[3:3]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[4:4];
  assert_eq(R.o_rs1, rs1_data[4:4]);
  assert_eq(R.o_rs2, rs2_data[4:4]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[5:5];
  assert_eq(R.o_rs1, rs1_data[5:5]);
  assert_eq(R.o_rs2, rs2_data[5:5]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[6:6];
  assert_eq(R.o_rs1, rs1_data[6:6]);
  assert_eq(R.o_rs2, rs2_data[6:6]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[7:7];
  assert_eq(R.o_rs1, rs1_data[7:7]);
  assert_eq(R.o_rs2, rs2_data[7:7]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[8:8];
  assert_eq(R.o_rs1, rs1_data[8:8]);
  assert_eq(R.o_rs2, rs2_data[8:8]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[9:9];
  assert_eq(R.o_rs1, rs1_data[9:9]);
  assert_eq(R.o_rs2, rs2_data[9:9]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[10:10];
  assert_eq(R.o_rs1, rs1_data[10:10]);
  assert_eq(R.o_rs2, rs2_data[10:10]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[11:11];
  assert_eq(R.o_rs1, rs1_data[11:11]);
  assert_eq(R.o_rs2, rs2_data[11:11]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[12:12];
  assert_eq(R.o_rs1, rs1_data[12:12]);
  assert_eq(R.o_rs2, rs2_data[12:12]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[13:13];
  assert_eq(R.o_rs1, rs1_data[13:13]);
  assert_eq(R.o_rs2, rs2_data[13:13]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[14:14];
  assert_eq(R.o_rs1, rs1_data[14:14]);
  assert_eq(R.o_rs2, rs2_data[14:14]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[15:15];
  assert_eq(R.o_rs1, rs1_data[15:15]);
  assert_eq(R.o_rs2, rs2_data[15:15]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[16:16];
  assert_eq(R.o_rs1, rs1_data[16:16]);
  assert_eq(R.o_rs2, rs2_data[16:16]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[17:17];
  assert_eq(R.o_rs1, rs1_data[17:17]);
  assert_eq(R.o_rs2, rs2_data[17:17]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[18:18];
  assert_eq(R.o_rs1, rs1_data[18:18]);
  assert_eq(R.o_rs2, rs2_data[18:18]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[19:19];
  assert_eq(R.o_rs1, rs1_data[19:19]);
  assert_eq(R.o_rs2, rs2_data[19:19]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[20:20];
  assert_eq(R.o_rs1, rs1_data[20:20]);
  assert_eq(R.o_rs2, rs2_data[20:20]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[21:21];
  assert_eq(R.o_rs1, rs1_data[21:21]);
  assert_eq(R.o_rs2, rs2_data[21:21]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[22:22];
  assert_eq(R.o_rs1, rs1_data[22:22]);
  assert_eq(R.o_rs2, rs2_data[22:22]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[23:23];
  assert_eq(R.o_rs1, rs1_data[23:23]);
  assert_eq(R.o_rs2, rs2_data[23:23]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[24:24];
  assert_eq(R.o_rs1, rs1_data[24:24]);
  assert_eq(R.o_rs2, rs2_data[24:24]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[25:25];
  assert_eq(R.o_rs1, rs1_data[25:25]);
  assert_eq(R.o_rs2, rs2_data[25:25]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[26:26];
  assert_eq(R.o_rs1, rs1_data[26:26]);
  assert_eq(R.o_rs2, rs2_data[26:26]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[27:27];
  assert_eq(R.o_rs1, rs1_data[27:27]);
  assert_eq(R.o_rs2, rs2_data[27:27]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[28:28];
  assert_eq(R.o_rs1, rs1_data[28:28]);
  assert_eq(R.o_rs2, rs2_data[28:28]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[29:29];
  assert_eq(R.o_rs1, rs1_data[29:29]);
  assert_eq(R.o_rs2, rs2_data[29:29]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[30:30];
  assert_eq(R.o_rs1, rs1_data[30:30]);
  assert_eq(R.o_rs2, rs2_data[30:30]);
  assert_eq(R.o_ready, 0);
  step(1);
  R.i_rd := rd_data[31:31];
  assert_eq(R.o_rs1, rs1_data[31:31]);
  assert_eq(R.o_rs2, rs2_data[31:31]);
  assert_eq(R.o_ready, 0);
}

fn idle<R: Regfile>() {
  R.i_go := 0;
  R.i_rd_en := 0;
  assert_eq(R.o_ready, 0);
}
