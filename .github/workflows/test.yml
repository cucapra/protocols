name: Protocols Tests

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

env:
  CARGO_TERM_COLOR: always

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-24.04
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly

    steps:
    - name: Update Rust to ${{ matrix.toolchain }}
      run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    - uses: YosysHQ/setup-oss-cad-suite@v3
      with:
        version: '2024-05-07'
    - name: Build
      run: cargo build --verbose
    - name: Run unit tests (Debug)
      run: cargo test --verbose
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    - name: Install Turnt 
      run: uv tool install turnt
    - name: Run Turnt tests for interpreter
      run: turnt --env interp $(find . -type f -name '*.tx') 
    - name: Run Turnt tests for monitor 
      run: turnt --env monitor $(find . -type f -name '*.prot')

  msrv:
    name: Check Minimum Rust Version for protocols library
    runs-on: ubuntu-24.04
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/cache-cargo-install-action@v2
        with:
          tool: cargo-msrv
      - name: Check MSRV
        working-directory: protocols
        run: cargo msrv verify

  format:
    name: Check Formatting
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    if: github.event.pull_request.draft == false || github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --check
  
  clippy:
    name: Clippy Lints
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    if: github.event.pull_request.draft == false || github.event_name == 'push'
    env:
      # Pin Rust version to prevent new Clippy lints from breaking CI
      RUST_VERSION: "1.85.0"

    steps:
      - uses: actions/checkout@v4
      - name: Install Rust ${{ env.RUST_VERSION }}
        run: |
          rustup toolchain install ${{ env.RUST_VERSION }} --component clippy
          rustup default ${{ env.RUST_VERSION }}
      - uses: YosysHQ/setup-oss-cad-suite@v3
        with:
          version: '2024-05-07'
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings